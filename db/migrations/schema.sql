DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS tasks CASCADE;
DROP TABLE IF EXISTS user_task CASCADE;
DROP TABLE IF EXISTS achievements CASCADE;
DROP TABLE IF EXISTS user_achievs CASCADE;
DROP TABLE IF EXISTS levels CASCADE;

CREATE TABLE users (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255),
  password VARCHAR(255),
  email VARCHAR(255),
  phone BIGINT,
  username VARCHAR(255),
  date_created DATE DEFAULT CURRENT_DATE,
  xp INTEGER DEFAULT 0,
  level INTEGER DEFAULT 1
);

CREATE TABLE achievements (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255),
  xp INTEGER,
  image_URL TEXT,
  description TEXT
);

CREATE TABLE tasks (
  id SERIAL PRIMARY KEY NOT NULL,
  name VARCHAR(255),
  completion_time_in_seconds INTEGER DEFAULT 0,
  type VARCHAR(255),
  xp INTEGER,
  description TEXT
);

CREATE TABLE levels (
  id SERIAL PRIMARY KEY NOT NULL,
  xp INTEGER
);

CREATE TABLE user_task (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  task_id INTEGER REFERENCES tasks(id) ON DELETE CASCADE,
  progress INTEGER DEFAULT 0,
  times_completed INTEGER DEFAULT 0 
);

CREATE TABLE user_achievs (
  id SERIAL PRIMARY KEY NOT NULL,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  achiev_id INTEGER REFERENCES achievements(id) ON DELETE CASCADE,
  progress INTEGER DEFAULT 0,
  times_completed INTEGER DEFAULT 0
);

